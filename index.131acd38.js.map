{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["let g_indexTitle = -1;\nlet g_currentTimelineId = '';\nlet g_htmlTimelineIdsBall = [];\nlet g_htmlTimelineSpeechBubble = [];\n\nconst initSaluteWave = () => {\n    document.getElementById('emojiHi').onmouseenter = () => {\n        const emojiHi = document.getElementById('emojiHi');\n        emojiHi.classList.remove('wave');\n        void emojiHi.offsetWidth;\n        emojiHi.classList.add('wave');\n    };\n};\n\nconst setTitleFavicon = () => {\n    const setFavicon = (char) => {\n        const linkForFavicon = document.querySelector(\n            `head > link[rel='icon']`\n        );\n\n        const getSvgFavicon = (param) => {\n            return `<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>${param}</text></svg>`;\n        };\n\n        const svg = getSvgFavicon(char);\n        linkForFavicon.setAttribute(`href`, `data:image/svg+xml,${svg}`);\n    };\n\n    const title = 'Jaime Chapinal';\n    g_indexTitle++;\n    if (g_indexTitle >= title.length) {\n        g_indexTitle = 0;\n    }\n    setFavicon(title[g_indexTitle]);\n};\n\nconst initFaviconTitle = () => {\n    const myInterval = setInterval(setTitleFavicon, 1000);\n};\n\nconst initTooltips = () => {\n    const createTooltip = (id, url) => {\n        tippy(`#${id}`, {\n            content: 'loading',\n            animation: 'scale',\n            inertia: true,\n            arrow: true,\n            hideOnClick: false,\n            onShow(instance) {\n                if (typeof instance.props.content !== 'object') {\n                    fetch(url)\n                        .then((response) => response.blob())\n                        .then((blob) => {\n                            const url = URL.createObjectURL(blob);\n                            const image = new Image();\n                            image.width = 200;\n                            image.height = 200;\n                            image.style.display = 'block';\n                            image.src = url;\n                            instance.setContent(image);\n                        })\n                        .catch((error) => {\n                            instance.setContent(`Request failed. ${error}`);\n                        });\n                }\n            },\n        });\n    };\n\n    const arraryGifInterests = [\n        {\n            id: 'gif-football',\n            gifUrl: './images/gifs/football.gif',\n        },\n        {\n            id: 'gif-videogames',\n            gifUrl: './images/gifs/videogames.gif',\n        },\n        {\n            id: 'gif-programming',\n            gifUrl: './images/gifs/programming.gif',\n        },\n        {\n            id: 'gif-office',\n            gifUrl: './images/gifs/the-office.gif',\n        },\n        {\n            id: 'gif-gifs',\n            gifUrl: './images/gifs/gifs.gif',\n        },\n    ];\n\n    arraryGifInterests.forEach((n) => {\n        createTooltip(n.id, n.gifUrl);\n    });\n};\n\nfunction updateSelectedItemAfter(selectedId) {\n    g_htmlTimelineIdsBall.forEach((htmlElement) => {\n        if (htmlElement.id === `item-${selectedId}`) {\n            htmlElement.classList.add('timeline__selected');\n        } else {\n            htmlElement.classList.remove('timeline__selected');\n        }\n    });\n\n    g_htmlTimelineSpeechBubble.forEach((htmlElement) => {\n        if (htmlElement.id === `timeline-${selectedId}`) {\n            htmlElement.classList.add('timeline__active');\n        } else {\n            htmlElement.classList.remove('timeline__active');\n        }\n    });\n}\n\nfunction clickOnTimeline(id) {\n    if (id === g_currentTimelineId) {\n        return;\n    }\n\n    g_currentTimelineId = id;\n    // const baseUrl = '../images/webp'; // Local\n    // const baseUrl =\n    //     'https://raw.githubusercontent.com/Xatpy/JaimeChapinal.com_v2/main/images/webp';\n    const baseUrl = 'https://jaimechapinal.com/images/webp/';\n    const mapCareer = {\n        spotify: {\n            imageUrl: baseUrl + '/logos/spotifyLogo.webp',\n            title: 'Spotfiy',\n            role: 'Software Engineer II',\n            tasks: 'Release squad',\n            projects: 'Spotify Desktop app. Internal developer tools.',\n        },\n        amazon: {\n            imageUrl: baseUrl + '/logos/amazon.webp',\n            title: 'Amazon',\n            role: 'Software Development Engineer II',\n            tasks: 'European Customer Experience Engineer: API, backend, mobile, OPS (retail). Kindle Reader: Maintaining PC/Mac reader apps and developing new web reader',\n            projects:\n                'Price drops in cart, Amazon Kids, Kindle Reader for PC/Mac/Web]',\n        },\n        king: {\n            imageUrl: baseUrl + '/logos/king.webp',\n            title: 'King',\n            role: 'C++ Game Programmer',\n            tasks: 'Gameplay and tools programmer. New content team: New in-game features (blockers, map functionalities) and art/design production toolsets.',\n            projects: 'Candy Crush Saga',\n        },\n        fl: {\n            imageUrl: baseUrl + '/logos/futureLighthouse.webp',\n            title: 'Future Lighthouse',\n            role: 'VR Engineer',\n            tasks: 'VR programming, QA certification bug fixing and publishing.',\n            projects: 'Melita (Gear VR), In the Cloud: VR Afterlife (PS4)',\n        },\n        gameloft: {\n            imageUrl: baseUrl + '/logos/gameloft.webp',\n            title: 'Gameloft',\n            role: 'UI Engineer',\n            tasks: 'Bug fixing (upd.6) and new Unity prototyping for an unannounced title.',\n            projects: 'Asphalt Extreme, Unannounced title',\n        },\n        ea: {\n            imageUrl: baseUrl + '/logos/ea.webp',\n            title: 'Electronic Arts',\n            role: 'Software Engineer',\n            tasks: 'Frostbite, Unity3D, Ignite and internal tools. PC,PS4,X1,PS3,X360. Internationalization, localization and bug fixing',\n            projects:\n                'FIFA 17, Battlefield 1, Star Wars Battlefront, FIFA 16,Plants vs Zombies: Heroes, Mirror’s Edge: Catalyst , Need for Speed',\n        },\n        carto: {\n            imageUrl: baseUrl + '/logos/carto.webp',\n            title: 'Carto',\n            role: 'Developer',\n            tasks: 'Front-End Engineer. QA. Technical Support',\n            projects: '',\n        },\n        simfor: {\n            imageUrl: baseUrl + '/logos/simfor.webp',\n            title: 'Simfor',\n            role: 'Programmer',\n            tasks: 'Virtual simulators: cranes, cars, buses, trucks and military vehicles. C++,(OSG), DirectX and Qt. Gameplay, tools and shaders',\n            projects: '',\n        },\n        complutense: {\n            imageUrl: baseUrl + '/logos/complutense.webp',\n            title: 'University Complutense of Madrid',\n            role: 'Student',\n            tasks: 'Master in Video Games Development (Programming)',\n            projects: '',\n        },\n        granada: {\n            imageUrl: baseUrl + '/logos/granada.webp',\n            title: 'University of Granada',\n            role: 'Student',\n            tasks: 'Master in Software Development (Human – Computer Interaction)',\n            projects: '',\n        },\n        mediapost: {\n            imageUrl: baseUrl + '/logos/mediapost.webp',\n            title: 'Mediapost',\n            role: 'Junior programmer',\n            tasks: 'Marketing and logistic web apps. Technologies: ASP.NET, C#, Javascript, web services and thermal printers',\n            projects: '',\n        },\n        uc3m: {\n            imageUrl: baseUrl + '/logos/uc3m.webp',\n            title: 'University Carlos III of Madrid',\n            role: 'Student',\n            tasks: '2007-2010: Technical Engineering in Computer Managements, 2010-2011: Computer Engineering Degree',\n            projects: '',\n        },\n    };\n\n    const foundCareer = mapCareer[id];\n\n    const timelineLogo = document.getElementById('timelineLogo');\n    timelineLogo.src = foundCareer.imageUrl;\n    timelineLogo.alt = 'Alt text image url';\n    if (id === 'spotify') {\n        timelineLogo.classList.add('logoBorderRadius');\n    } else {\n        timelineLogo.classList.remove('logoBorderRadius');\n    }\n    const timelineStageSelectedRole = document.getElementById(\n        'timelineStageSelectedRole'\n    );\n    const timelineStageSelectedTasks = document.getElementById(\n        'timelineStageSelectedTasks'\n    );\n    const timelineStageSelectedProjects = document.getElementById(\n        'timelineStageSelectedProjects'\n    );\n    timelineStageSelectedRole.innerHTML = foundCareer.role ?? '';\n    timelineStageSelectedTasks.innerHTML = foundCareer.tasks ?? '';\n    timelineStageSelectedProjects.innerHTML = foundCareer.projects ?? '';\n\n    const divSelectedStageTextContainer = document.getElementById(\n        'divSelectedStageTextContainer'\n    );\n    divSelectedStageTextContainer.classList.remove('runAnimation');\n    void divSelectedStageTextContainer.offsetWidth;\n    divSelectedStageTextContainer.classList.add('runAnimation');\n\n    updateSelectedItemAfter(id);\n}\n\nconst initTimeline = () => {\n    clickOnTimeline('spotify');\n\n    const companiesId = [\n        'spotify',\n        'amazon',\n        'king',\n        'fl',\n        'gameloft',\n        'ea',\n        'carto',\n        'simfor',\n        'complutense',\n        'granada',\n        'mediapost',\n        'uc3m',\n    ];\n    companiesId.forEach((id) => {\n        g_htmlTimelineIdsBall.push(document.getElementById(`item-${id}`));\n        g_htmlTimelineSpeechBubble.push(\n            document.getElementById(`timeline-${id}`)\n        );\n    });\n};\n\nconst playSound = (soundUrl) => {\n    const audio = new Audio(soundUrl);\n    audio.play();\n};\n\nconst sendPing = () => {\n    playSound('./sounds/a.mp3');\n    document.getElementById('bell').classList.remove('pulse-button');\n    void document.getElementById('bell').offsetWidth;\n    document.getElementById('bell').classList.remove('bell-animation');\n    void document.getElementById('bell').offsetWidth;\n    document.getElementById('bell').classList.add('bell-animation');\n};\n\nconst closeBanner = () => {\n    localStorage.setItem('cookies', 'closed');\n    document.getElementById('cookie-banner').classList.add('hidden');\n    playSound('./sounds/cookie.ogg');\n};\n\nconst initCookiesBanner = () => {\n    if (localStorage.getItem('cookies') != 'closed') {\n        document.getElementById('cookie-close').onclick = closeBanner;\n        document.getElementById('cookie-banner').classList.remove('hidden');\n    }\n};\n\nconst initObserversFadeInAnimations = () => {\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach((elem) => {\n            if (elem.isIntersecting) {\n                elem.target.classList.add('fadeIn');\n            }\n        });\n    });\n\n    const transparentNodes = document.getElementsByClassName('transparent');\n    for (let elem of transparentNodes) {\n        observer.observe(elem);\n    }\n};\n\nwindow.onload = () => {\n    initFaviconTitle();\n    initSaluteWave();\n    initCookiesBanner();\n    initObserversFadeInAnimations();\n    initTooltips();\n    initTimeline();\n};\n"],"names":["g_indexTitle","g_currentTimelineId","g_htmlTimelineIdsBall","g_htmlTimelineSpeechBubble","initSaluteWave","document","getElementById","onmouseenter","emojiHi","classList","remove","offsetWidth","add","setTitleFavicon","title","length","char","linkForFavicon","querySelector","svg","setAttribute","setFavicon","initFaviconTitle","setInterval","initTooltips","id","gifUrl","forEach","n","url","tippy","content","animation","inertia","arrow","hideOnClick","onShow","instance","props","fetch","then","response","blob","URL","createObjectURL","image","Image","width","height","style","display","src","setContent","catch","error","updateSelectedItemAfter","selectedId","htmlElement","clickOnTimeline","baseUrl","foundCareer","spotify","imageUrl","role","tasks","projects","amazon","king","fl","gameloft","ea","carto","simfor","complutense","granada","mediapost","uc3m","timelineLogo","alt","timelineStageSelectedRole","timelineStageSelectedTasks","timelineStageSelectedProjects","innerHTML","divSelectedStageTextContainer","initTimeline","push","playSound","soundUrl","Audio","play","sendPing","closeBanner","localStorage","setItem","initCookiesBanner","getItem","onclick","initObserversFadeInAnimations","observer","IntersectionObserver","entries","elem","isIntersecting","target","transparentNodes","getElementsByClassName","observe","window","onload"],"version":3,"file":"index.131acd38.js.map"}